# This is a sample Python script.

# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.

# Form implementation generated from reading ui file 'Sidebar_03.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import PyQt5
from PyQt5 import QtCore, QtGui, QtWidgets, uic
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.uic import loadUiType


import resources_02_rc
import os
from os import path
import sys
import urllib.request

import MySQLdb
import datetime
from xlsxwriter import *
from xlrd import *
import pyqtgraph as pg


########## import UI File ######## (ECIP_04)

FORM_CLASS, _ = loadUiType(path.join(path.dirname(__file__), "main_ecip_04.ui"))


######## intiate UI File ########## (ECIP_04)
class Main(QMainWindow, FORM_CLASS):
    def __init__(self, parent=None):
        super(Main, self).__init__(parent)
        QMainWindow.__init__(self)
        self.setupUi(self)
        self.Db_Connect()
        self.UI_Changes()
        self.Handel_Buttons()
        self.Handel_New_Device_ComboBox()
        self.Handel_New_Employee_ComboBox()
        self.Handel_Add_User_ComboBox()


    ## UI Changes in Login ## (ECIP_04)
    def UI_Changes(self):
        self.tabWidget.tabBar().setVisible(False)
        self.tabWidget_5.tabBar().setVisible(False)
        self.tabWidget_7.tabBar().setVisible(False)
        self.tabWidget_8.tabBar().setVisible(False)
        self.tabWidget.setCurrentIndex(0)

    ## Connection between App and DB (ECIP_04)
    def Db_Connect(self):
        self.db = MySQLdb.connect(host='localhost', user='root', password='P@ssw0rd', database='ecip_db_01')
        self.cur = self.db.cursor()
        print('DB_Connection Accepted')

    ## Handel All Buttons In Our App (ECIP_04)
    def Handel_Buttons(self):
        self.pushButton_52.setChecked(True)

        self.pushButton_79.clicked.connect(self.Open_CRM_Tap)
        self.pushButton_54.clicked.connect(self.tabWidget.setCurrentIndex)

        self.pushButton_62.clicked.connect(self.Open_Home_Tap)
        self.pushButton_55.clicked.connect(self.Open_Home_Tap)
        self.pushButton_65.clicked.connect(self.Open_Employee_Tap)
        self.pushButton_58.clicked.connect(self.Open_Employee_Tap)
        self.pushButton_64.clicked.connect(self.Open_Device_Tap)
        self.pushButton_57.clicked.connect(self.Open_Device_Tap)
        self.pushButton_69.clicked.connect(self.Open_Clints_Tap)
        self.pushButton_70.clicked.connect(self.Open_Clints_Tap)
        self.pushButton_63.clicked.connect(self.Open_Sites_Tap)
        self.pushButton_56.clicked.connect(self.Open_Sites_Tap)
        self.pushButton_66.clicked.connect(self.Open_Report_Tap)
        self.pushButton_59.clicked.connect(self.Open_Report_Tap)
        self.pushButton_67.clicked.connect(self.Open_Settings_Tap)
        self.pushButton_60.clicked.connect(self.Open_Settings_Tap)

        self.pushButton_26.clicked.connect(self.Add_Branch)
        self.pushButton_49.clicked.connect(self.Add_Employee)

    ## Handel Login
    def Handel_Login(self):
        pass

    ## Handel Reset Password
    def Handel_Reset_Password(self):
        pass

    ## Handel Day To Day Operations
    def Handel_Today_Work(self):
        pass

    ##################################

    ##################################
    ## Create ID For Device
    def Create_ID_Device(self):
        pass

    ##################################

    ##################################
    ##################################
    ## Show All Devices
    def Show_All_Devices(self):
        pass

    ## Add New Devices
    def Add_New_Devices(self):
        pass

    ## Edit Devices
    def Edit_Devices(self):
        pass

    ## Delete Devices
    def Delete_Devices(self):
        pass

    #################################


    #################################

    ## Add New Employee (ECIP_04)
    def Add_Employee(self):

        employee_name = self.lineEdit_33.text()
        employee_mail = self.lineEdit_41.text()
        employee_phone = self.lineEdit_42.text()
        national_id = self.lineEdit_43.text()
        priority_01 = self.lineEdit_44.text()
        employee_branch = self.comboBox_2.currentIndex()
        password = self.lineEdit_45.text()
        password2 = self.lineEdit_46.text()

        date = datetime.datetime.now()

        if password == password2:
            self.cur.execute('''
                INSERT INTO employee (name, mail, phone, date, national_id, periority, password, branch)
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
                ''', (employee_name, employee_mail, employee_phone, date, national_id, priority_01, password, employee_branch))
            self.db.commit()
            self.lineEdit_33.setText('')
            self.lineEdit_41.setText('')
            self.lineEdit_42.setText('')
            self.lineEdit_43.setText('')
            self.lineEdit_44.setText('')
            self.lineEdit_45.setText('')
            self.lineEdit_46.setText('')

            self.statusBar().showMessage('تم إضافة الموظف بنجاح')
            print('Employee Added')
        else:
            print('Wrong Password')

    ## Edit Employee
    def Edit_Employe(self):
        pass

    ##################################

    ## Add Permissions to any employee
    def Add_Employee_Permissions(self):
        pass

    ## Send Reports to The Admin
    def Admin_Reports(self):
        pass

    #################################
    ## History
    ## Show All History To the Admin
    def Show_History(self):
        pass

    #################################
    ## Books Report

    ## Show All Books Report
    def All_Devices_Report(self):
        pass

    ## Show Report For Filtered Books
    def Devices_Filter_Report(self):
        pass

    ## Export Books Data To Excel File
    def Devices_Export_Report(self):
        pass

    #################################
    ## Clients Report

    ## Show All Clients Report
    def All_Clients_Report(self):
        pass

    ## Show Report For Filtered Clients
    def Clients_Filter_Report(self):
        pass

    ## Export Clients Data To Excel File
    def Clients_Export_Report(self):
        pass

    #################################
    ## Monthly Report

    ## Show One Monthly Report
    def Monthly_Report(self):
        pass


    ## Show Report For Filtered Monthly
    def Monthly_Filter_Report(self):
        pass


    ## Export Clients Data To Excel File
    def Monthly_Export_Report(self):
        pass

    #################################
    ## Settings

    ## Add New Branch
    def Add_Branch(self):
        branch_name = self.lineEdit_72.text()
        branch_code = self.lineEdit_73.text()
        branch_location = self.lineEdit_82.text()

        self.cur.execute(''' 
            INSERT INTO branch(name, code, location)
            VALUES (%s, %s, %s)
            ''', (branch_name, branch_code, branch_location))
        self.db.commit()
        self.lineEdit_72.setText('')
        self.lineEdit_73.setText('')
        self.lineEdit_82.setText('')

        self.statusBar().showMessage('تم إنشاء الفرع بنجاح')
        print('Branch Added')


    def Add_Device_Type(self):
        type_name = self.lineEdit_87.text()

        self.cur.execute('''
            INSERT INTO device_type(name)
            VALUES (%s)
        ''',(type_name))

        self.db.commit()
        print('Device Type Added')


    ## Add New Category
    def Add_Category(self):
        category_name = self.lineEdit_87.text()
        parent_category_Text = self.comboBox_28.currentText()

        query = ''' SELECT id FROM category WHERE category_name = %s'''
        self.cur.execute(query, [(parent_category_Text)])
        data = self.cur.fetchone()
        parent_category = data

        self.cur.execute('''
                    INSERT INTO category(category_name, parent_category)
                    VALUES (%s, %s)
                ''', (category_name, parent_category))
        self.db.commit()
        print('Category Added')
        self.lineEdit_87.setText('')

        self.statusBar().showMessage('تم إضافة القسم بنجاح')


##############################################
## Show
##############################################
    # Show All Category
    def Show_All_Categories(self):
        self.comboBox_22.clear()
        self.cur.execute('''
            SELECT category_name FROM category
        ''')

        categories = self.cur.fetchall()
        #print(categories)

        for category in categories:
            self.comboBox.addItem(str(category[0]))
            self.comboBox_2.addItem(str(category[0]))
            self.comboBox_3.addItem(str(category[0]))
            self.comboBox_4.addItem(str(category[0]))
            self.comboBox_5.addItem(str(category[0]))
            self.comboBox_6.addItem(str(category[0]))
            self.comboBox_7.addItem(str(category[0]))
            self.comboBox_8.addItem(str(category[0]))
            self.comboBox_10.addItem(str(category[0]))
            self.comboBox_22.addItem(str(category[0]))


    def Show_Branchies(self):

        self.cur.execute('''
            SELECT name From branch
        ''')

        branchies = self.cur.fetchall()

        for branch in branchies:
            self.comboBox_14.addItem(branch[0])
            self.comboBox_15.addItem(branch[0])
            self.comboBox_26.addItem(branch[0])


    def Show_Employees(self):
        """
        self.cur.execute('''
            SELECT name FROM employee
        ''')

        employees = self.sur.fetchall()

        for employee in employees:
            self.comboBox_11.addItem(employee[0])
        """
        pass

################################
## Open Tap (ECIP_04)
################################

    ## Open CRM Tap (ECIP_04)
    def Open_CRM_Tap(self):
        self.tabWidget.setCurrentIndex(1)
        print('CRM Tap')

    ## Open Home Tap (ECIP_04)
    def Open_Home_Tap(self):
        self.tabWidget_5.setCurrentIndex(0)
        print('Home Tap')

    ## Open Employee Tap (ECIP_04)
    def Open_Employee_Tap(self):
        self.tabWidget_5.setCurrentIndex(1)
        self.tabWidget_4.setCurrentIndex(0)
        print('Employee Tap')

    ## Open Device Tap (ECIP_04)
    def Open_Device_Tap(self):
        self.tabWidget_5.setCurrentIndex(2)
        self.tabWidget_2.setCurrentIndex(0)
        print('Device Tap')

    ## Open Clients Tap (ECIP_04)
    def Open_Clints_Tap(self):
        self.tabWidget_5.setCurrentIndex(3)
        self.tabWidget_3.setCurrentIndex(0)
        print('Clients Tap')

    ## Open Sites Tap (ECIP_04)
    def Open_Sites_Tap(self):
        self.tabWidget_5.setCurrentIndex(4)
        print('Sites Tap')

    ## Open Report Tap (ECIP_04)
    def Open_Report_Tap(self):
        self.tabWidget_5.setCurrentIndex(5)
        print('Report Tap')

    ## Open History Tap (ECIP_04)
    def Open_History_Tap(self):
        self.tabWidget.setCurrentIndex(6)
        print('History Tap')

    ## Open Dashboard Tap (ECIP_04)
    def Open_Dashboard_Tap(self):
        self.tabWidget.setCurrentIndex(7)
        print('Dashboard Tap')

    ## Open Settings Tap (ECIP_04)
    def Open_Settings_Tap(self):
        self.tabWidget_5.setCurrentIndex(8)
        self.tabWidget_6.setCurrentIndex(0)
        print('Settings Tap')

################################
    def Handel_New_Device_ComboBox(self):

        self.comboBox_15.activated.connect(self.Open_New_Device_tab)
    def Open_New_Device_tab(self, index):
        self.tabWidget_7.setCurrentIndex(0)
        self.tabWidget_7.setCurrentIndex(index)


################################
    def Handel_New_Employee_ComboBox(self):

        self.comboBox_16.activated.connect(self.Open_New_Employee_tab)
    def Open_New_Employee_tab(self, index):
        self.tabWidget_8.setCurrentIndex(0)
        self.tabWidget_8.setCurrentIndex(index)

################################

    def Handel_Add_User_ComboBox(self):
        self.comboBox_17.activated.connect(self.Open_Add_User_tab)

    def Open_Add_User_tab(self, index):
        self.tabWidget_9.setCurrentIndex(0)
        self.tabWidget_9.setCurrentIndex(index)

################################

    ## Main (ECIP_04)
def main():
    app = QApplication(sys.argv)
    window = Main()
    window.show()
    app.exec_()  # infinite loop


if __name__ == '__main__':
    main()
